<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:behaviours="http://metro.mahapps.com/winfx/xaml/shared"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:b = "clr-namespace:HoPoSim.Behaviors"
                    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
                    xmlns:converters = "clr-namespace:HoPoSim.Framework.Converters;assembly=HoPoSim.Framework">

	<converters:BooleanOrConverter x:Key="BooleanOrConverter"/>

	<SolidColorBrush x:Key="TabItemPanelBackgroundBrush" Color="{DynamicResource Gray8}" />
	<SolidColorBrush x:Key="TabItemBackgroundIsSelectedBrush" Color="{DynamicResource Gray2}" />
	<SolidColorBrush x:Key="TabItemBackgroundIsMouseOverBrush" Color="{DynamicResource Gray5}" />
	<SolidColorBrush x:Key="TabItemForegroundIsSelectedBrush" Color="{DynamicResource IdealForegroundColor}" />
	<SolidColorBrush x:Key="TabItemSelectorBrush" Color="{DynamicResource AccentColor}" />
	<SolidColorBrush x:Key="TabControlBackgroundBrush" Color="WhiteSmoke" />

	<ContextMenu x:Key="contextMenuButton">
		<MenuItem Command="ApplicationCommands.Copy"/>
		<MenuItem Command="ApplicationCommands.Cut"/>
		<MenuItem Command="ApplicationCommands.Paste"/>
		<MenuItem Command="ApplicationCommands.Undo"/>
		<MenuItem Command="ApplicationCommands.Redo"/>
		<MenuItem Command="ApplicationCommands.SelectAll"/>
	</ContextMenu>

	<Style x:Key="CircleDropDownButton"
                       BasedOn="{StaticResource {x:Type Controls:DropDownButton}}"
                       TargetType="Controls:DropDownButton">
		<Setter Property="ArrowVisibility" Value="Collapsed" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="ButtonStyle" Value="{DynamicResource MahApps.Metro.Styles.MetroCircleButtonStyle}" />
		<Setter Property="FocusVisualStyle" Value="{DynamicResource MahApps.Metro.Styles.MetroCircleFocusVisual}" />
		<Setter Property="Height" Value="56" />
		<Setter Property="Width" Value="56" />
	</Style>

	<Style TargetType="{x:Type Button}" BasedOn="{StaticResource ResourceKey=SquareButtonStyle}" >
		<Setter Property="Margin" Value="5,0,5,0"/>
	</Style>

	<Style TargetType="{x:Type ComboBox}" BasedOn="{StaticResource {x:Type ComboBox}}">
		<Setter Property="Margin" Value="0,0,0,0"/>
		<Setter Property="HorizontalAlignment" Value="Left"/>
	</Style>

	<Style TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
		<Setter Property="Background" Value="{DynamicResource AccentColorBrush2}"/>
	</Style>

	<Style TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
		<Setter Property="Background" Value="{DynamicResource AccentColorBrush2}"/>
	</Style>

	<Style x:Key="FilterCriteriumExpander" TargetType="{x:Type Expander}" BasedOn="{StaticResource {x:Type Expander}}">
		<Setter Property="Background" Value="{DynamicResource AccentColorBrush3}"/>
		<Setter Property="Margin" Value="1"/>
		<!--<Setter Property="BorderThickness" Value="0"/>-->
	</Style>

	<Style TargetType="{x:Type RadioButton}" BasedOn="{StaticResource {x:Type RadioButton}}">
		<Setter Property="Margin" Value="5,0,5,15"/>
	</Style>

	<Style TargetType="{x:Type CheckBox}" BasedOn="{StaticResource {x:Type CheckBox}}">
		<Setter Property="Margin" Value="5,0,5,15"/>
	</Style>

	<Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="FontWeight" Value="Medium"/>
		<!--<Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource self}}"/>-->
		<!--<Setter Property="Margin" Value="5,0,5,10"/>-->
	</Style>

	<Style x:Key="SectionTitleTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
		<Setter Property="Margin" Value="0,10,0,15"/>
		<Setter Property="FontSize" Value="18"/>
		<Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"/>
	</Style>

	<Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
		<!--x:Key="TextBoxWithErrorFeedback"-->
		<!--<Setter Property="ToolTip" Value="{Binding Text, RelativeSource={RelativeSource self}}"/>-->
		<Setter Property="Margin" Value="0,0,0,15"/>
		<Setter Property="b:InputBindingsManager.UpdatePropertySourceWhenEnterPressed" Value="TextBox.Text"/>
		<Setter Property="ContextMenu" Value="{StaticResource contextMenuButton}"/>
		<Setter Property="Validation.ErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<StackPanel Orientation="Vertical">
						<Border x:Name="errorBorder" Background="#FFdc000c" Margin="1,0,0,0"
                Opacity="0" CornerRadius="1.5"
                IsHitTestVisible="False"
                MinHeight="24" MaxWidth="267">
							<Border.Effect>
								<DropShadowEffect ShadowDepth="2.25" 
                                  Color="Black" 
                                  Opacity="0.4"
                                  Direction="315"
                                  BlurRadius="4"/>
							</Border.Effect>
							<TextBlock Text="{Binding ElementName=adorner,
                                      Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                       Foreground="White" Margin="8,3,8,3" TextWrapping="Wrap"/>
						</Border>
						<Border BorderThickness="1" BorderBrush="#FFdc000c" CornerRadius="0.7"
                VerticalAlignment="Top">
							<Grid>
								<Polygon x:Name="toolTipCorner"
                         Grid.ZIndex="2"
                         Margin="-1"
                         Points="6,6 6,0 0,0" 
                         Fill="#FFdc000c" 
                         HorizontalAlignment="Right" 
                         VerticalAlignment="Top"
                         IsHitTestVisible="True"/>
								<Polyline Grid.ZIndex="3"
                          Points="7,7 0,0" Margin="-1" HorizontalAlignment="Right" 
                          StrokeThickness="1.5"
                          StrokeEndLineCap="Round"
                          StrokeStartLineCap="Round"
                          Stroke="White"
                          VerticalAlignment="Top"
                          IsHitTestVisible="True"/>
								<AdornedElementPlaceholder x:Name="adorner"/>
							</Grid>
						</Border>
					
					</StackPanel>
					<ControlTemplate.Triggers>
						<DataTrigger Value="True">
							<DataTrigger.Binding>
								<MultiBinding Converter="{StaticResource BooleanOrConverter}">
									<Binding ElementName="adorner" Path="AdornedElement.IsKeyboardFocused" />
									<Binding ElementName="toolTipCorner" Path="IsMouseOver"/>
								</MultiBinding>
							</DataTrigger.Binding>
							<DataTrigger.EnterActions>
								<BeginStoryboard x:Name="fadeInStoryboard">
									<Storyboard>
										<DoubleAnimation Duration="00:00:00.15"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="1"/>
										<ThicknessAnimation Duration="00:00:00.15"
                                            Storyboard.TargetName="errorBorder"
                                            Storyboard.TargetProperty="Margin"
                                            FillBehavior="HoldEnd"
                                            From="1,0,0,0"
                                            To="5,0,0,0">
											<ThicknessAnimation.EasingFunction>
												<BackEase EasingMode="EaseOut" Amplitude="2"/>
											</ThicknessAnimation.EasingFunction>
										</ThicknessAnimation>
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<StopStoryboard BeginStoryboardName="fadeInStoryboard"/>
								<BeginStoryboard x:Name="fadeOutStoryBoard">
									<Storyboard>
										<DoubleAnimation Duration="00:00:00"
                                         Storyboard.TargetName="errorBorder"
                                         Storyboard.TargetProperty="Opacity"
                                         To="0"/>
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Validation.HasError" Value="True">
				<Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
			</Trigger>
		</Style.Triggers>
	</Style>


	<Style x:Key="CustomTabItemStyle2" TargetType="{x:Type TabItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="MinWidth" Value="120" />
		<Setter Property="FontSize" Value="14" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<Grid x:Name="PART_Grid"
                          Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="True"
                          Margin="0">
						<ContentPresenter x:Name="PART_HeaderContent"
                                          Margin="{TemplateBinding Padding}"
                                          ContentSource="Header"
                                          HorizontalAlignment="Center"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<Rectangle x:Name="PART_Selector"
                                   VerticalAlignment="Bottom"
                                   Height="4"
                                   Visibility="Collapsed"
                                   Fill="{StaticResource TabItemSelectorBrush}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{StaticResource TabItemBackgroundIsSelectedBrush}" />
							<Setter Property="Foreground" Value="{StaticResource TabItemForegroundIsSelectedBrush}" />
							<Setter TargetName="PART_Selector" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger SourceName="PART_Grid" Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource TabItemBackgroundIsMouseOverBrush}" />
							<Setter Property="Cursor" Value="Hand" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="CustomTabControlStyle" TargetType="{x:Type TabControl}">
		<Setter Property="Background" Value="{StaticResource TabControlBackgroundBrush}" />
		<Setter Property="TabStripPlacement" Value="Top" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource CustomTabItemStyle}" />
		<!--<Setter Property="ContentTemplate" Value="{StaticResource CustomTabItemItemTemplate}" />-->
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<DockPanel LastChildFill="True">
						<Grid x:Name="HeaderGrid"
                              DockPanel.Dock="Left"
                              Background="{StaticResource TabItemPanelBackgroundBrush}">
							<TabPanel x:Name="HeaderPanel"
                                      HorizontalAlignment="Center"
                                      Panel.ZIndex="1"
                                      IsItemsHost="True"
                                      KeyboardNavigation.TabIndex="1" />
						</Grid>
						<Border x:Name="ContentPanel"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                KeyboardNavigation.TabIndex="2"
                                KeyboardNavigation.TabNavigation="Local"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<controls:TransitioningContentControl UseLayoutRounding="True"
                                                                  behaviours:ReloadBehavior.OnSelectedTabChanged="True"
                                                                  RestartTransitionOnContentChange="True"
                                                                  Transition="{TemplateBinding controls:TabControlHelper.Transition}">
								<ContentPresenter x:Name="PART_SelectedContentHost"
                                                  UseLayoutRounding="False"
                                                  Margin="{TemplateBinding Padding}"
                                                  ContentSource="SelectedContent"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</controls:TransitioningContentControl>
						</Border>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="TabStripPlacement" Value="Top">
							<Setter TargetName="HeaderGrid" Property="DockPanel.Dock" Value="Top" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!--<Style x:Key="TabItemDetailsStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Controls:ControlsHelper.HeaderFontSize" Value="14"/>
    </Style>-->


	<!--<Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource {x:Type RepeatButton}}">
        <Setter Property="Padding" Value="2"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentColorBrush}"/>
    </Style>-->


</ResourceDictionary>