<UserControl  x:Class="HoPoSim.Controls.CustomNotificationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d"  
        RenderOptions.ClearTypeHint="Enabled"
        
        TextOptions.TextFormattingMode="Display"
        
             Width="450">


    <DockPanel LastChildFill="True">
        <TextBlock DockPanel.Dock="Top" FontSize="24" Foreground="{DynamicResource AccentColorBrush}" Margin="10" Text="{Binding Title}"/>

        <!--<Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition />
                </Grid.RowDefinitions>

                <TextBlock Margin="10,3" FontWeight="Bold" TextWrapping="Wrap" Grid.Row="0" Grid.Column="0">Title:</TextBlock>
                <TextBlock Margin="10,3" TextWrapping="Wrap" Grid.Row="0" Grid.Column="1" Text="{Binding Title}" />

                <TextBlock Margin="10,3" FontWeight="Bold" TextWrapping="Wrap" Grid.Row="1" Grid.Column="0">Content:</TextBlock>
                <TextBlock Margin="10,3" TextWrapping="Wrap" Grid.Row="1" Grid.Column="1" Text="{Binding Content}" />
            </Grid>
            <TextBlock Margin="10" TextWrapping="Wrap">
                The notification passed as a parameter in the InteractionRequest is automatically set as the DataContext of the window.
                As this view does not have its own DataContext it will inherit the DataContext of the hosting window.
            </TextBlock>
            <TextBlock Margin="10" TextWrapping="Wrap">
                You can either stop this iteration by closing the window or clicking the button below.
                The button will invoke the FinishInteraction action to close the window.
            </TextBlock>-->


        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DockPanel.Dock="Bottom" Margin="10">
            <Button AutomationProperties.AutomationId="CustomPopupOkButton" Margin="10" HorizontalAlignment="Right" Width="75" Click="ButtonOK_Click">OK</Button>
        </StackPanel>

        <TextBlock Margin="10" TextWrapping="Wrap" Text="{Binding Content}"/>
    </DockPanel>



</UserControl>
